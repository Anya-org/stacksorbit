name: Publish StacksOrbit

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish_npm:
        description: 'Publish to npm'
        required: true
        type: boolean
        default: true
      publish_pypi:
        description: 'Publish to PyPI'
        required: true
        type: boolean
        default: true

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install tkinter (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -e .
      
      - name: Install Node dependencies
        run: npm install
      
      - name: Run Python tests
        run: pytest tests/ -v --cov=stacksorbit --cov-report=xml
      
      - name: Run GUI tests (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export DISPLAY=:99
          sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          python tests/test_gui.py
      
      - name: Run GUI tests (Windows)
        if: matrix.os == 'windows-latest'
        run: python tests/test_gui.py
        shell: pwsh
      
      - name: Run GUI tests (macOS)
        if: matrix.os == 'macos-latest'
        run: python tests/test_gui.py
      
      - name: Upload coverage (optional)
        if: hashFiles('coverage.xml') != ''
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
          fail_ci_if_error: false

  publish-npm:
    name: Publish to npm
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_npm == 'true')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build package
        run: npm run prepare
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_pypi == 'true')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true

  create-release:
    name: Create GitHub Release
    needs: [publish-npm, publish-pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: StacksOrbit v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## What's New in v${{ steps.get_version.outputs.VERSION }}
            
            See [CHANGELOG.md](CHANGELOG.md) for details.
            
            ## Installation
            
            ### npm
            ```bash
            npm install -g stacksorbit@${{ steps.get_version.outputs.VERSION }}
            ```
            
            ### PyPI
            ```bash
            pip install stacksorbit==${{ steps.get_version.outputs.VERSION }}
            ```
            
            ## Links
            - [Documentation](https://stacksorbit.dev)
            - [npm Package](https://www.npmjs.com/package/stacksorbit)
            - [PyPI Package](https://pypi.org/project/stacksorbit/)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
